#!/bin/bash

#!#############################################################
#!#### Modify the options in this section as appropriate ######
#!#############################################################

#! sbatch directives begin here ###############################
#! Name of the job:
#SBATCH -J "gamma-neg"

#! How many whole nodes should be allocated?
#SBATCH --nodes=4

#! How many (MPI) tasks will there be in total?
#! Note probably this should not exceed the total number of GPUs in use.
#SBATCH --ntasks=12

#! Specify the number of GPUs per node (between 1 and 4; must be 4 if nodes>1).
#! Note that the job submission script will enforce no more than 3 cpus per GPU.
#SBATCH --gres=gpu:3



#SBATCH --cpus-per-gpu=1
#SBATCH --gpu-bind=closest
#SBATCH --use-min-nodes

#! How much wallclock time will be required?
#SBATCH --time=0-05:00:00

#! What types of email messages do you wish to receive?
#SBATCH --mail-type=FAIL,END
#SBATCH --mail-user=rishit@tamu.edu

#! Uncomment this to prevent the job from being requeued (e.g. if
#! interrupted by node failure or system downtime):
#SBATCH --no-requeue

#! Do not change:
#SBATCH -p amd

#! sbatch directives end here (put any additional directives above this line)

#! Notes:
#! Charging is determined by GPU number*walltime. 

#! Number of nodes and tasks per node allocated by SLURM (do not change):
numnodes=$SLURM_JOB_NUM_NODES
numtasks=$SLURM_NTASKS
mpi_tasks_per_node=$(echo "$SLURM_TASKS_PER_NODE" | sed -e  's/^\([0-9][0-9]*\).*$/\1/')
#! ############################################################
#! Modify the settings below to specify the application's environment, location 
#! and launch method:

#! Optionally modify the environment seen by the application
#! (note that SLURM reproduces the environment at submission irrespective of ~/.bashrc):
. /etc/profile.d/modules.sh                # Leave this line (enables the module command)
module purge                               # Removes all modules still loaded

#! Maybe load some modules here

. /home/grads/r/rishit/code/Pyfr_venv/bin/activate

export PATH=/usr/local/cuda/bin${PATH:+:${PATH}}
export PATH=$HOME/.local/bin/:$PATH
export LDPATH=$HOME/.local/lib/:$LDPATH
export LDPATH=$HOME/.local/lib64/:$LDPATH
export CPATH=$HOME/.local/include/:$CPATH
export CPPATH=$HOME/.local/include/:$CPPATH
export LD_LIBRARY_PATH=$HOME/.local/lib/:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=$HOME/.local/lib64/:$LD_LIBRARY_PATH
export PKG_CONFIG_PATH=$HOME/.local/lib/pkgconfig:$PKG_CONFIG_PATH
export PKG_CONFIG_PATH=$HOME/.local/lib64/pkgconfig:$PKG_CONFIG_PATH
export PATH=/usr/local/cuda/bin/:$PATH
export PATH=/opt/rocm/bin/:$PATH
export LD_LIBRARY_PATH=/opt/rocm/lib/:${LD_LIBRARY_PATH}
export LD_LIBRARY_PATH=/opt/rocm/lib64/:${LD_LIBRARY_PATH}
export LD_LIBRARY_PATH=/opt/rocm/llvm/lib/:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/opt/rocm/llvm/lib-debug/:$LD_LIBRARY_PATH


local_subdir=openmpi
export PATH=$HOME/.local/$local_subdir/bin/:$PATH
export LDPATH=$HOME/.local/$local_subdir/lib/:$LDPATH
export CPATH=$HOME/.local/$local_subdir/include/:$CPATH
export CPPATH=$HOME/.local/$local_subdir/include/:$CPPATH
export LD_LIBRARY_PATH=$HOME/.local/$local_subdir/lib/:$LD_LIBRARY_PATH
export LIBRARY_PATH=$HOME/.local/$local_subdir/lib/:$LIBRARY_PATH



#! Insert additional module load commands after this line if needed:

#! Full path to application executable: 
#!application="$HOME/code/Pyfr_venv/bin/python"

#! Run options for the application:
options="$HOME/code/Pyfr_venv/PyFR/pyfr/pyfr run -b hip sd7003.pyfrm sd7003.ini"

#! Work directory (i.e. where the job will run):
workdir="$SLURM_SUBMIT_DIR"  # The value of SLURM_SUBMIT_DIR sets workdir to the directory
                             # in which sbatch is run.

#! Are you using OpenMP (NB this is unrelated to OpenMPI)? If so increase this
#! safe value to no more than 12:
#export OMP_NUM_THREADS=10

#! Number of MPI tasks to be started by the application per node and in total (do not change):
np=$[${numnodes}*${mpi_tasks_per_node}]

#! Choose this for a pure shared-memory OpenMP parallel program on a single node:
#! (OMP_NUM_THREADS threads will be created):
#CMD="$application $options"

#! Choose this for a MPI code using OpenMPI:
CMD="mpiexec --mca btl_openib_allow_ib 1 -n $np $application $options"


###############################################################
### You should not have to change anything below this line ####
###############################################################

cd $workdir
echo -e "Changed directory to `pwd`.\n"

JOBID=$SLURM_JOB_ID

echo -e "JobID: $JOBID\n======"
echo "Time: `date`"
echo "Running on master node: `hostname`"
echo "Current directory: `pwd`"

echo -e "\nnumtasks=$numtasks, numnodes=$numnodes, mpi_tasks_per_node=$mpi_tasks_per_node (OMP_NUM_THREADS=$OMP_NUM_THREADS)"

echo -e "\nExecuting command:\n==================\n$CMD\n"

eval $CMD 
